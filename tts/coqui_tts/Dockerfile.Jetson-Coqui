# based on:
# https://www.youtube.com/watch?v=cWq5E90AIGE
# https://github.com/thorstenMueller/Thorsten-Voice/blob/master/helperScripts/Dockerfile.Jetson-Coqui

# Dockerfile for running Coqui TTS trainings in a docker container on NVIDIA Jetson platofrm.
# Based on NVIDIA Jetson ML Image, provided without any warranty as is by Thorsten MÃ¼ller (https://twitter.com/ThorstenVoice) in august 2021

FROM nvcr.io/nvidia/l4t-ml:r32.7.1-py3

#RUN echo "deb https://repo.download.nvidia.com/jetson/common r32.4 main" >> /etc/apt/sources.list.d/nvidia-l4t-apt-source.list
#RUN echo "deb https://repo.download.nvidia.com/jetson/t194 r32.4 main" >> /etc/apt/sources.list.d/nvidia-l4t-apt-source.list

RUN apt-get update -y
#RUN apt-get install vim python-mecab libmecab-dev libsndfile1-dev locales -y

# Setting some environment vars
#ENV LLVM_CONFIG=/usr/bin/llvm-config-9
#ENV PYTHONPATH=/coqui/TTS/
#ENV LD_LIBRARY_PATH=/usr/local/cuda-10.2/lib64:$LD_LIBRARY_PATH
# Skipping OPENBLAS_CORETYPE might show "Illegal instruction (core dumped) error
#ENV OPENBLAS_CORETYPE=ARMV8

#ENV NVIDIA_VISIBLE_DEVICES all
#ENV NVIDIA_DRIVER_CAPABILITIES compute,utility
#LABEL com.nvidia.volumes.needed="nvidia_driver"

# Adjust locale setting to your personal needs
#RUN sed -i '/de_DE.UTF-8/s/^# //g' /etc/locale.gen && \
#    locale-gen
#ENV LANG de_DE.UTF-8
#ENV LANGUAGE de_DE:de
#ENV LC_ALL de_DE.UTF-8

RUN mkdir /coqui
WORKDIR /coqui

#ARG COQUI_BRANCH
#RUN git clone -b ${COQUI_BRANCH} https://github.com/coqui-ai/TTS.git
ADD TTS /coqui/TTS
WORKDIR /coqui/TTS
RUN pip3 install pip setuptools wheel --upgrade
RUN pip uninstall -y tensorboard tensorflow tensorflow-estimator nbconvert matplotlib
RUN pip install -r requirements.txt
RUN python3 ./setup.py develop
#RUN python3 TTS/bin/synthesize.py --text "The first manned Moon landing was Apollo 11 on July, 20 1969. The first human to step on the Moon was astronaut Neil Armstrong followed second by Buzz Aldrin. They landed in the Sea of Tranquility with their lunar module the Eagle. They were on the lunar surface for 2.25 hours and collected 50 pounds of moon rocks." --model_name "tts_models/en/ljspeech/glow-tts" --vocoder_name "vocoder_models/en/ljspeech/multiband-melgan" --out_path warmup-file.wav

# Jupyter Notebook
#RUN python3 -c "from notebook.auth.security import set_password; set_password('nvidia', '/root/.jupyter/jupyter_notebook_config.json')"
#CMD /bin/bash -c "jupyter lab --ip 0.0.0.0 --port 8888 --allow-root"


# Build example:
#   nvidia-docker build . -f Dockerfile.Jetson-Coqui --build-arg COQUI_BRANCH=v0.1.3 -t jetson-coqui
#   sudo nvidia-docker build . -f Dockerfile.Jetson-Coqui -t jetson-coqui
# Run example:
#   nvidia-docker run -p 8888:8888 -d --shm-size 32g --gpus all -v /ssd/___prj/tts/dataset-july21:/coqui/TTS/data jetson-coqui
#   sudo nvidia-docker run -p 60124:60124 --gpus all --runtime nvidia -it --volume /home/pi/ml:/ml --volume /home/pi/ml/ttscache:/root/.local/share/tts jetson-coqui python3 /ml/docktest/TTS/TTS/bin/synthesize_server.py --model_name "tts_models/en/ljspeech/glow-tts" --vocoder_name "vocoder_models/en/ljspeech/multiband-melgan"
# Bash example:
#   nvidia-docker exec -it <containerId> /bin/bash
























